' # Curve Fitting
we have some data that was generated by a process:
`y = α*x + β`
We have examples of `x` and `y`, and want to discover the values of `α` and `β`


quad : Real -> Real -> Real -> Real = 
    \α β x. α*(sq x) + β

true_f = quad 3.5 10.0

:p true_f 2.0

' ## Data generation
Here we are mocking up some data

x_data = for i:(Fin 10). rand $ ixkey 1 i

y_data = for i. true_f x_data.i




' ## Particle Swarm Optimizer
A totally over-kill way to solve this (convex) problem would be to use a particle swarm optimizer. 

include "examples/particle-swarm-optimizer.dx"


' We define a loss function, MSE from ground truth

loss : (Fin 2=>Real) -> Real = \ ab.
    a = ab.(fromOrdinal (Fin 2) 0)
    b = ab.(fromOrdinal (Fin 2) 1)
    mean for i.
        sq $ y_data.i - quad a b x_data.i


:p loss [3.5, 10.0]

:p loss [4.5, 2.0]


pso 50 1000 loss ([-10.0, -10.0], [10.0, -10.0])
